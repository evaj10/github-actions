name: ASP.NET-CI

on:
  pull_request:
    branches: [develop]

jobs:
  ci-pipe:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x'
          source-url: https://nuget.pkg.github.com/evaj10/index.json
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }} # secrets.GITHUB_TOKEN predefinisan, omogucava pozivanje github api-ja
      - name: Cache Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages # lokacija kesa za nuget u okviru linux masine (dato u dokumentaciji)
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/package-lock.json')}} # kljuc pod kojim je kes sacuvan (kreira se novi za svaku promenu dependensija)
          restore-keys: |
            ${{ runner.os }}-nuget-
      - name: Install Dependencies
        working-directory: ./CoreWebApiPipe
        run: dotnet restore
      - name: Build App
        working-directory: ./CoreWebApiPipe
        run: dotnet build --configuration Release --no-restore # bilduje aplikaciju za po Release konfiguraciji i bez pozivanja dotnet restore pre bilda
      - name: Run Tests
        working-directory: ./CoreWebApiPipe
        run: dotnet test --no-restore --verbosity normal
      - name: Create Package
        working-directory: ./CoreWebApiPipe/CoreWebApiPipe
        run: dotnet pack --configuration Release --no-build
      - name: Publish the package to GPR
        run: dotnet nuget push CoreWebApiPipe/CoreWebApiPipe/bin/Release/*.nupkg --api-key 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 --source "github"
    
  cd-pipe:
    runs-on: ubuntu-latest
    needs: ["ci-pipe"]
    steps:
      - name: "Say hello"
        run: echo "Hello"
